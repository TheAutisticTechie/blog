<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title or metadata.title }}</title>
    <meta name="description" content="{{ description or metadata.description }}">
    <link rel="shortcut icon" href="/img/icons/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/img/icons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/img/icons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/img/icons/favicon-16x16.png">

    <link rel="stylesheet" href="{{ '/css/styles.css' | url }}">
    <link rel="alternate" href="{{ metadata.feed.path | url }}" type="application/atom+xml" title="{{ metadata.title }}">
    <link rel="alternate" href="{{ metadata.jsonfeed.path | url }}" type="application/json" title="{{ metadata.title }}">
  </head>
  <body>
    <header>
      <section>
        <a href="{{ '/' | url }}"><h1 class="home">{{ metadata.title }}</h1></a>
        <nav>
          {%- for entry in collections.all | eleventyNavigation %}
            <a href="{{ entry.url | url }}" class="nav-item{% if entry.url == page.url %} nav-item-active{% endif %}">{{ entry.title }}</a>
          {%- endfor %}
        </nav>
      <section>
      <div class="themeToggle">
        <input id="lightToggle" class="toggle toggleLeft" name="theme" type="radio">
        <label for="lightToggle" class="toggleBtn">Light</label>

        <input id="darkToggle" class="toggle toggleRight" name="theme" type="radio">
        <label for="darkToggle" class="toggleBtn">Dark</label>
      </div>
    </header>

    <main{% if templateClass %} class="{{ templateClass }}"{% endif %}>
      {{ content | safe }}
    </main>

    <footer></footer>

    <!-- Current page: {{ page.url | url }} -->
  </body>
  <script>
    const htmlEl = window.document.documentElement;

    function classRemove() {
      htmlEl.classList.remove('theme_dark', 'theme_light');
    };
    function setThemeLight() {
      classRemove();
      htmlEl.classList.add('theme_light');
      localStorage.setItem("theme", 'light');
      local = localStorage.getItem('theme');
    };
    function setThemeDark() {
      classRemove();
      htmlEl.classList.add('theme_dark');
      localStorage.setItem("theme", 'dark');
      local = localStorage.getItem('theme');
    };
    lightToggle.addEventListener("click", setThemeLight);
    darkToggle.addEventListener("click", setThemeDark);

    let theme = localStorage.getItem('theme');
    if (theme == null) {
      const sysTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
      if (sysTheme == 'light') {
        classRemove();
        htmlEl.classList.add('theme_light');
        document.getElementById("lightToggle").checked = true;
      } else {
        classRemove();
        htmlEl.classList.add('theme_dark');
        document.getElementById("darkToggle").checked = true;
      }
    } else if (theme === 'light') {
      classRemove();
      htmlEl.classList.add('theme_' + theme);
      document.getElementById("lightToggle").checked = true;
    } else if (theme === 'dark') {
      classRemove();
      htmlEl.classList.add('theme_' + theme);
      document.getElementById("darkToggle").checked = true;
    }
  </script>
</html>
